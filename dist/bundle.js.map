{"version":3,"sources":["webpack://list/webpack/universalModuleDefinition","webpack://list/webpack/bootstrap","webpack://list/./constants.js","webpack://list/./hadlers/body.js","webpack://list/./list.js","webpack://list/./services/api.js","webpack://list/./services/error-logger.js","webpack://list/./services/helper.js","webpack://list/./services/storage.js","webpack://list/./services/validation.js","webpack://list/./templates/body.js","webpack://list/./templates/loader.js","webpack://list/./templates/row.js","webpack://list/./templates/toolbar.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACD;AACY;AACkC;AACpC;AACjB;;AAEnC;AACA;AACA;AACA,aAAa;AACb;AACO,uBAAuB,SAAS;AACvC,WAAW,cAAc;AACzB;AACA,oBAAoB;;AAEpB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,iCAAiC,eAAe;AAChD,qBAAqB,yDAAO,KAAK,mDAAQ;AACzC;AACA,QAAQ,uEAAQ;AAChB;AACA;AACA,WAAW,UAAU;AACrB;AACA,2BAA2B,8DAAQ;AACnC,wBAAwB,sDAAG;AAC3B;AACA;AACA;AACA;AACA,YAAY,yDAAO;AACnB;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,eAAe;AAC5C;AACA,gDAAgD,yEAAgB,CAAC,8DAAmB;AACpF;AACA;AACA;AACA,KAAK;AACL,qBAAqB,yDAAO;AAC5B;AACA,4BAA4B,sDAAG;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACO,mBAAmB,SAAS;AACnC,WAAW,UAAU;AACrB,yBAAyB,yEAAgB,CAAC,wDAAa;AACvD;;AAEA;AACA,iBAAiB,yDAAO,KAAK,qDAAU;AACvC;AACA,QAAQ,uEAAQ;AAChB;AACA;AACA;AACA;AACA;AACA,qBAAqB,yDAAO,KAAK,mDAAQ;AACzC;AACA,QAAQ,uEAAQ;AAChB;AACA;AACA,oBAAoB,sDAAG;AACvB;AACA;AACA,C;;;;;;;;;;;;ACrGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACC;AACD;AACD;AACU;AACjB;;AAE3B,uCAAuC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,IAAI,yDAAO,KAAK,mDAAQ;AACxB,WAAW,mBAAmB,IAAI;;AAElC;AACA,qBAAqB,uDAAW;AAChC;;AAEA;AACA,wBAAwB,0DAAO;AAC/B;;AAEA;AACA;AACA,2BAA2B,8DAAQ;AACnC,QAAQ,yDAAO,KAAK,qDAAU;AAC9B,wBAAwB,sDAAG;AAC3B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,C;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAA;AAAA;AAAmF;;AAEnF;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACO;;AAEP;AACA;AACA;AACA,aAAa;AACb;AACO;AACP;AACA,IAAI,oEAAgB;AACpB;AACA,IAAI,mEAAe;;AAEnB;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACO;AACP;AACA,IAAI,oEAAgB;AACpB;AACA,IAAI,oEAAgB;;AAEpB;AACA;;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AAEO;;AAEA;;AAEA,mF;;;;;;;;;;;;ACRP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACC;;AAEnC;AACP;AACA,QAAQ,8DAAQ,cAAc,IAAI;AAClC;AACA;AACA;AACA;AACA,WAAW,oDAAS;AACpB;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;ACpBA;AAAA;AAA0C;;AAE3B;AACf;AACA;AACA,YAAY,8DAAQ,kBAAkB,MAAM,kBAAkB,IAAI;AAClE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC,EAAC;;;;;;;;;;;;;AChBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;AAEnC;AACP;AACA,QAAQ,8DAAQ;AAChB;AACA;AACA;AACA,QAAQ,8DAAQ;AAChB;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AACxB;AACsB;AACK;;AAE1C;AACf;AACA;AACA,oBAAoB,yEAAgB;AACpC;AACA;;AAEA;AACA;AACA,gCAAgC,yEAAgB;AAChD,8BAA8B,uDAAM;AACpC;;AAEA;AACA,4CAA4C,0DAAY;AACxD;AACA,yCAAyC,sDAAQ;;AAEjD;AACA;;AAEA;AACA;AACA,QAAQ,uEAAQ;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,uEAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AChDA;AAAA;AAAA;AAAsD;;AAEvC;AACf,gBAAgB,yEAAgB;AAChC;AACA;;AAEA;AACA;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4E;AACxB;AACD;AACR;AACD;;AAE3B;AACf,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA,YAAY,uEAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,uEAAQ;AACpB;AACA,0CAA0C,yEAAgB,YAAY;AACtE;AACA;AACA;AACA;AACA;AACA,mBAAmB,GAAG,EAAE,qEAAY,GAAG;AACvC;AACA,yBAAyB,yEAAgB;AACzC;AACA;AACA;AACA,0CAA0C,yEAAgB,QAAQ,IAAI,MAAM;AAC5E,eAAe;AACf,sCAAsC,yEAAgB,YAAY,IAAI,MAAM;AAC5E;AACA;;AAEA;AACA;AACA,yBAAyB,yEAAgB,CAAC,8DAAmB;AAC7D;AACA;AACA;AACA,0CAA0C,yEAAgB,QAAQ,IAAI,MAAM,IAAI,MAAM;AACtF,eAAe;AACf;;AAEA;AACA;AACA;;;;;;;;;;;;;;ACpDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8D;AAChC;AACsB;AACV;AACe;;AAE1C;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,yEAAgB;AACpC;AACA;AACA,4BAA4B,uDAAM;;AAElC;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,uEAAQ;AACpB;AACA;AACA;AACA;AACA,qCAAqC,MAAM,WAAW,yEAAgB,QAAQ,GAAG,yEAAgB,CAAC,wDAAa,EAAE,IAAI,+DAAM,QAAQ;;AAEnI;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,OAAO;AAC1B,kBAAkB,yDAAO,KAAK,qDAAU;AACxC;AACA","file":"bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"list\"] = factory();\n\telse\n\t\troot[\"list\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./list.js\");\n","export const NAMESPACE = 'one-point-app';\nexport const EXTENDED_INFO_CLASS = 'extended';\nexport const TOOLBAR_CLASS = 'toolbar';\nexport const USERS_LIST = 'users-list';\nexport const SETTINGS = 'settings';\n","import { fetchOne } from '../services/api';\nimport storage from '../services/storage';\nimport { getWithNamespace } from '../services/helper';\nimport { EXTENDED_INFO_CLASS, SETTINGS, TOOLBAR_CLASS, USERS_LIST } from '../constants';\nimport { logError } from '../services/error-logger';\nimport Row from '../templates/row';\n\n/**\n *\n * @param target\n * @returns {boolean}\n */\nexport function showUserInfo({ target }) {\n    const { id, dataset } = target;\n    const el = document.getElementById(id);\n    const params = { el, body: this, id };\n\n    if (el.classList.contains('loaded')) {\n        toggleExtendedInfo(params);\n    } else {\n        initialRendering(params, dataset.id);\n    }\n    return true;\n}\n\n/**\n *\n * @param el\n * @param body\n * @param id\n * @param rowId\n * @returns {Promise<void>}\n */\nasync function initialRendering({ el, body, id }, rowId) {\n    const settings = storage.get(SETTINGS);\n    if (!settings) {\n        logError('Widget settings were not found in storage.', 8);\n        throw new Error('User can not be loaded.');\n    }\n    const { urlInfo } = JSON.parse(settings);\n    try {\n        const info = await fetchOne(urlInfo + '/' + rowId);\n        const rowInfo = Row.prepareRowInfo(info);\n        el.appendChild(rowInfo);\n        el.classList.add('loaded');\n        el.classList.toggle('expanded');\n        if (info) {\n            storage.add(id, JSON.stringify(info));\n        }\n    } catch(e) {\n        body.showError(e);\n    }\n}\n\n/**\n *\n * @param el\n * @param body\n * @param id\n */\nfunction toggleExtendedInfo({ el, body, id }) {\n    if (el.classList.contains('expanded')) {\n        const children = el.querySelector('.' + getWithNamespace(EXTENDED_INFO_CLASS));\n        if (children) {\n            children.remove();\n        }\n    } else {\n        const info = storage.get(id);\n        if (info) {\n            const rowInfo = Row.prepareRowInfo(JSON.parse(info));\n            el.appendChild(rowInfo);\n        }\n    }\n    el.classList.toggle('expanded');\n}\n\n/**\n * @param target\n */\nexport function sortRows({ target }) {\n    const { sortKey } = target.dataset;\n    const toolbarClass = getWithNamespace(TOOLBAR_CLASS);\n    if (!target.classList.contains(toolbarClass)) return;\n\n    //Sort users\n    const data = storage.get(USERS_LIST);\n    if (!data) {\n        logError('Users data was not found in storage.', 9);\n        return;\n    }\n    const users = JSON.parse(data);\n    users.sort((curr, next) => (curr[sortKey] > next[sortKey] ? 1 : -1));\n    // Render users\n    const settings = storage.get(SETTINGS);\n    if (!settings) {\n        logError('Widget settings were not found in storage.', 8);\n        throw new Error('User can not be loaded.');\n    }\n    const row = new Row(JSON.parse(settings));\n    const rows = row.prepareAll(users);\n    this.render(rows);\n}","import { fetchAll } from './services/api';\nimport BodyElement from './templates/body';\nimport Toolbar from './templates/toolbar';\nimport storage from './services/storage';\nimport { SETTINGS, USERS_LIST } from './constants';\nimport Row from './templates/row';\n\nexport async function render(initSettings = {}) {\n    const defaults = {\n        parentEl: document.body,\n        urlAll: '',\n        urlInfo: '',\n        limit: 100,\n        offset: 0,\n        rowId: 'id',\n    };\n    const settings = { ...defaults, ...initSettings };\n    storage.add(SETTINGS, JSON.stringify(settings));\n    const { parentEl, urlAll } = { ...defaults, ...initSettings };\n\n    // Body\n    const body = new BodyElement();\n    parentEl.appendChild(body.create());\n\n    // Toolbar\n    const toolbar = new Toolbar(settings);\n    body.el.prepend(toolbar.create());\n\n    // Load initial data\n    try {\n        const data = await fetchAll(urlAll);\n        storage.add(USERS_LIST, JSON.stringify(data));\n        const row = new Row(settings);\n        const rows = row.prepareAll(data);\n        body.render(rows);\n        toolbar.render(Object.keys(data[0]));\n    } catch (e) {\n        body.showError(e);\n    }\n}","import { validateIsArray, validateIsObject, validateResponse } from './validation';\n\nconst defHeaders = {\n    method: 'GET', // *GET, POST, PUT, DELETE, etc.\n    mode: 'cors', // no-cors, cors, *same-origin\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin', // include, *same-origin, omit\n    headers: {\n        // 'Content-Type': 'application/json; charset=utf-8',\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: 'follow', // manual, *follow, error\n    referrer: 'no-referrer', // no-referrer, *client\n};\n\n/**\n * default request\n *\n * @param url\n * @param headers\n * @returns {Promise<Response>}\n */\nexport const fetchRequest = (url = '', headers = defHeaders) => fetch(url, headers);\n\n/**\n * Get all rows\n * @param url\n * @returns {Promise<Response>}\n */\nexport async function fetchAll(url) {\n    let response = await fetchRequest(url);\n    validateResponse(response);\n    const data = await response.json();\n    validateIsArray(data);\n\n    return data;\n}\n\n/**\n * Get extended info for row\n *\n * @param url\n * @returns {Promise<any>}\n */\nexport async function fetchOne(url) {\n    let response = await fetchRequest(url)\n    validateResponse(response);\n    const data = await response.json();\n    validateIsObject(data);\n\n    return data;\n}\n","/**\n * Here different log methods\n */\n\nexport const logError = (msg = 'error logging without entry message', errorCode) => console.error(msg, '--errorCode:', errorCode);\n\nexport const logWarning = (msg = 'warning logging without entry message', warnCode) => console.warn(msg, '--warningCode:', warnCode);\n\nexport const logDebug = (msg = 'debug logging without entry message') => console.log(msg);","import { NAMESPACE } from '../constants';\nimport { logError } from './error-logger';\n\nexport function getWithNamespace(str = '') {\n    if (typeof str !== 'string') {\n        logError(`Variable [${str}] can not be namespaced according to wrong type`, 2);\n        str = Math.random()\n                  .toString(36)\n                  .substr(2, 5);\n    }\n    return NAMESPACE + '-' + str;\n}\n\nexport function purify(value) {\n    // @todo realise purify by any way\n    return value;\n}\n\nexport function getRandomInt() {\n    return Math.floor(Math.random() * 1000000);\n}\n","import { logDebug } from './error-logger';\n\nexport default {\n    add (key, value) {\n        if (typeof key !== 'string' || typeof value !== 'string') {\n            logDebug(`Try to store [${value}] by using key [${key}]`);\n            throw new Error('Key and value should be a string to store data');\n        }\n        sessionStorage.setItem(key, value);\n    },\n    get (key) {\n        if (typeof key !== 'string') {\n            throw new Error('Key should be a string to get data');\n        }\n        return sessionStorage.getItem(key);\n    },\n};\n","import { logError } from './error-logger';\n\nexport function validateByInterface(params = [], rules = []) {\n    if (typeof params !== 'object') {\n        logError('Income params for validation user is not an object', 3);\n        throw new Error('Data can not be rendered');\n    }\n    if (!Array.isArray(rules)) {\n        logError('Wrong interface for validation user', 4);\n        throw new Error('Data can not be rendered');\n    }\n    // Require that params at least corresponds to interface\n    return rules.every(requiredField => typeof params[requiredField] !== 'undefined');\n}\n\nexport function validateResponse(response) {\n    if (!response.ok) {\n        throw new Error('Resource is unavailable');\n    }\n\n    return response;\n}\n\nexport function validateIsArray(element) {\n    if (!Array.isArray(element)) {\n        throw 'Data has broken format. Please use array.';\n    }\n    return element;\n}\nexport function validateIsObject(element) {\n    if (typeof element !== 'object') {\n        throw 'Info has broken format. Please use object.';\n    }\n    return element\n}","import { getWithNamespace } from '../services/helper';\nimport loader from './loader';\nimport { logError } from '../services/error-logger';\nimport { showUserInfo, sortRows } from '../hadlers/body';\n\nexport default class BodyElement {\n    create() {\n        // Wrapper\n        const cls = getWithNamespace('list-wrapper');\n        this.el = document.createElement('div');\n        this.el.classList.add(cls);\n\n        // Users list container\n        this.list = document.createElement('div');\n        this.list.classList.add(getWithNamespace('list'));\n        this.list.appendChild(loader());\n        this.el.appendChild(this.list);\n\n        // const handler = showUserInfo.bind(this);\n        this.list.addEventListener('click', showUserInfo.bind(this));\n        // const handler = sortRows.bind(this);\n        this.el.addEventListener('click',sortRows.bind(this));\n\n        return this.el;\n    }\n\n    showError(e) {\n        this.cleanupList();\n        logError(e, 5);\n        const errElement = document.createElement('div');\n        errElement.textContent = 'Data was fetched with error.';\n        this.el.appendChild(errElement);\n    }\n\n    render(rowsHTML = []) {\n        if (!Array.isArray(rowsHTML)) {\n            logError('Income data not an array', 6);\n            throw new Error('Data can not be rendered');\n        }\n        this.cleanupList();\n        const renderedList = document.createElement('div');\n        rowsHTML.forEach(el => renderedList.appendChild(el));\n        this.list.appendChild(renderedList);\n    }\n\n    cleanupList() {\n        this.list.firstChild.remove();\n    }\n}\n","import { getWithNamespace } from '../services/helper';\n\nexport default function loader() {\n    const cls = getWithNamespace('spinner');\n    const loaderEl = document.createElement('div');\n    loaderEl.classList.add(cls);\n\n    return loaderEl;\n}\n","import { getRandomInt, getWithNamespace, purify } from '../services/helper';\nimport { logError } from '../services/error-logger';\nimport { EXTENDED_INFO_CLASS } from '../constants';\nimport { fetchOne } from '../services/api';\nimport storage from '../services/storage';\n\nexport default class Row {\n    constructor({rowId}) {\n        this.rowId = rowId;\n    }\n    prepareAll(data = []) {\n        if (!Array.isArray(data)) {\n            logError('Income data not an array', 7);\n            throw new Error('Data can not be rendered');\n        }\n        return data.map(el => this.prepareRow(el));\n    }\n\n    prepareRow(fields) {\n        if (typeof fields !== 'object') {\n            logError('Row can not be prepared because of wrong format of income data.', 1);\n            const el = document.createElement('div');\n            el.innerHTML = `<div class='${getWithNamespace('shortly')}'>Wrong user</div>`;\n            return el;\n        }\n        const id = fields[this.rowId];\n        delete fields[this.rowId];\n        const el = document.createElement('div');\n        el.id = `${id}${getRandomInt()}`;\n        el.dataset.id = id;\n        el.classList.add(getWithNamespace('row'));\n        let inner = '';\n        Object.entries(fields)\n              .forEach(([field, value]) => {\n                  inner += `<div class='${getWithNamespace(field)}'>${value}</div>`;\n              });\n        el.innerHTML = `<div class='${getWithNamespace('shortly')}'>${inner}</div>`;\n        return el;\n    }\n\n    static prepareRowInfo(info) {\n        const el = document.createElement('div');\n        el.classList.add(getWithNamespace(EXTENDED_INFO_CLASS));\n        let inner = '';\n        Object.entries(info)\n              .forEach(([field, value]) => {\n                  inner += `<div class='${getWithNamespace(field)}'>${field}: ${value}</div>`;\n              });\n        el.innerHTML = inner;\n\n        return el;\n    }\n}\n\n","import { getWithNamespace, purify } from '../services/helper';\nimport loader from './loader';\nimport { logDebug } from '../services/error-logger';\nimport storage from '../services/storage';\nimport { TOOLBAR_CLASS, USERS_LIST } from '../constants';\n\nexport default class Toolbar {\n    constructor() {\n        this.restrictedFields = [\n            'email',\n            'password',\n        ];\n    }\n\n    create() {\n        const cls = getWithNamespace('list-toolbar');\n        this.el = document.createElement('div');\n        this.el.classList.add(cls);\n        this.el.appendChild(loader());\n\n        return this.el;\n    }\n\n    render(fields) {\n        this.cleanup();\n        if (!Array.isArray(fields)) {\n            // If toolbar can not be rendered we just loose sorting, but body is still available\n            logDebug('Toolbar rendered empty because of incorrect data');\n            return '';\n        }\n        this.el.innerHTML = fields.reduce((acc, field) => acc += (this.restrictedFields.includes(field)\n            ? ''\n            : `<div data-sort-key=\"${field}\" class=\"${getWithNamespace(field)} ${getWithNamespace(TOOLBAR_CLASS)}\">${purify(field)}</div>`), '');\n\n        return this.el;\n    }\n\n    cleanup() {\n        while (this.el.firstChild) {\n            this.el.removeChild(this.el.lastChild);\n        }\n    }\n}\n\nfunction sortRows({target}, sortHandler){\n    const users = storage.get(USERS_LIST);\n    sortHandler(JSON.parse(users), target.dataset.sortKey);\n}\n"],"sourceRoot":""}